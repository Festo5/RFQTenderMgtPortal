@model TenderDocumentUploadViewModel

<div class="container py-5">
    <div class="row">
        <div class="col-12">
            <h3 class="mb-4">Upload Document for Tender: @Model.TenderNo</h3>
            <p class="text-muted">@Model.Description</p>

            @if (ViewData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @ViewData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card shadow">
                <div class="card-body">
                    <form asp-action="UploadDocument" enctype="multipart/form-data" method="post" id="uploadForm">
                        <input type="hidden" asp-for="TenderId" />
                        <input type="hidden" asp-for="TenderNo" />
                        <input type="hidden" asp-for="Description" />
                        <input type="hidden" asp-for="Status" />
                        <input type="hidden" asp-for="VendorNo" />

                        <div class="mb-3">
                            <label asp-for="DocumentFile" class="form-label">Document File</label>
                            <input asp-for="DocumentFile" type="file" class="form-control"
                                   accept=".pdf,.doc,.docx,.xls,.xlsx,.txt,.dwg" />
                            <span asp-validation-for="DocumentFile" class="text-danger"></span>
                            <small class="text-muted">Allowed file types: PDF, Word, Excel, Text, DWG (Max 10MB)</small>
                        </div>

                        <div class="mb-3">
                            <label asp-for="DocumentType" class="form-label">Document Type</label>
                            <select asp-for="DocumentType" class="form-select">
                                <option value="Specification">Specification</option>
                                <option value="Drawing">Drawing</option>
                                <option value="Contract">Contract</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label asp-for="SecurityLevel" class="form-label">Security Level</label>
                            <select asp-for="SecurityLevel" class="form-select">
                                <option value="Internal">Internal</option>
                                <option value="Confidential">Confidential</option>
                                <option value="Secret">Secret</option>
                            </select>
                        </div>

                        <div class="mb-3 form-check">
                            <input asp-for="IsEncrypted" type="checkbox" class="form-check-input" />
                            <label asp-for="IsEncrypted" class="form-check-label">Encrypt Document</label>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index")" class="btn btn-secondary me-md-2">Cancel</a>
                            <button type="submit" class="btn btn-primary" id="submitButton">Upload Document</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Existing Documents Section -->
            <div class="card shadow mt-4">
                <div class="card-header">
                    <h5 class="mb-0">Existing Documents</h5>
                </div>
                <div class="card-body">
                    @if (Model.ExistingDocuments.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>File Name</th>
                                        <th>Type</th>
                                        <th>Uploaded Date</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var doc in Model.ExistingDocuments)
                                    {
                                        <tr>
                                            <td>@doc.FileName.@doc.FileExtension</td>
                                            <td>@doc.DocumentType</td>
                                            <td>@doc.UploadedDate.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <a href="@Url.Action("DownloadTenderDocument", "Tender", new { documentId = doc.SystemId })"
                                                   class="btn btn-sm btn-primary download-document"
                                                   title="Download @doc.FileName.@doc.FileExtension">
                                                    <i class="fas fa-download"></i> Download
                                                </a>
                                                <button class="btn btn-sm btn-danger delete-document"
                                                        data-document-id="@doc.SystemId"
                                                        data-tender-id="@Model.TenderId"
                                                        title="@(Model.Status != "Open" ? "Cannot delete - tender is not open" : "Delete " + doc.FileName + "." + doc.FileExtension)"
                                                        @(Model.Status != "Open" ? "disabled" : "")>
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">No documents have been uploaded yet.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function() {
            // Client-side validation
            $('#uploadForm').submit(function(e) {
                const fileInput = $('#DocumentFile')[0];
                const maxSize = 10 * 1024 * 1024; // 10MB
                const errorContainer = $('.alert-danger');

                // Clear previous errors
                errorContainer.hide();

                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const allowedExtensions = ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.txt', '.dwg'];
                    const fileExt = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();

                    // Check file size
                    if (file.size > maxSize) {
                        showError('File size exceeds maximum limit of 10MB');
                        e.preventDefault();
                        return false;
                    }

                    // Check file extension
                    if (!allowedExtensions.includes(fileExt)) {
                        showError('Invalid file type. Please upload one of: PDF, Word, Excel, Text, or DWG files');
                        e.preventDefault();
                        return false;
                    }
                } else {
                    showError('Please select a file to upload');
                    e.preventDefault();
                    return false;
                }

                // Disable button to prevent double submission
                $('#submitButton').prop('disabled', true).html(
                    '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Uploading...'
                );

                return true;
            });

            // File input change event for immediate feedback
            $('#DocumentFile').change(function() {
                const fileInput = $(this)[0];
                const errorSpan = $(this).siblings('.text-danger');
                const maxSize = 10 * 1024 * 1024; // 10MB

                if (fileInput.files.length > 0) {
                    const file = fileInput.files[0];
                    const allowedExtensions = ['.pdf', '.doc', '.docx', '.xls', '.xlsx', '.txt', '.dwg'];
                    const fileExt = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();

                    if (file.size > maxSize) {
                        errorSpan.text('File size exceeds maximum limit of 10MB');
                        $(this).val('');
                    } else if (!allowedExtensions.includes(fileExt)) {
                        errorSpan.text('Invalid file type. Allowed: PDF, Word, Excel, Text, DWG');
                        $(this).val('');
                    } else {
                        errorSpan.text('');
                    }
                }
            });

            // Delete document handler
            $(document).on('click', '.delete-document:not(:disabled)', function() {
                const documentId = $(this).data('document-id');
                const tenderId = $(this).data('tender-id');
                const button = $(this);
                const row = button.closest('tr');

                if (confirm('Are you sure you want to delete this document?')) {
                    button.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Deleting...');

                    $.ajax({
                        url: '@Url.Action("DeleteTenderDocument", "Tender")',
                        type: 'POST',
                        data: {
                            documentId: documentId,
                            tenderId: tenderId
                        },
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            if (response.success) {
                                row.fadeOut(400, function() {
                                    $(this).remove();
                                    if ($('tbody tr').length === 0) {
                                        $('tbody').append('<tr><td colspan="4" class="text-center">No documents found</td></tr>');
                                    }
                                });
                            } else {
                                alert('Error deleting document: ' + response.message);
                                button.prop('disabled', false).html('<i class="fas fa-trash"></i> Delete');
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Error deleting document. Please try again.');
                            console.error('Delete error:', error);
                            button.prop('disabled', false).html('<i class="fas fa-trash"></i> Delete');
                        }
                    });
                }
            });

            function showError(message) {
                const errorContainer = $('.alert-danger');
                errorContainer.text(message).show();
                $('html, body').animate({
                    scrollTop: errorContainer.offset().top - 20
                }, 200);
            }
        });
    </script>
}